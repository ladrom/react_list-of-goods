{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","isReversed","alphabeticalBtn","setState","lengthBtn","reverseBtn","resetBtn","this","goods","visibleGoods","sort","g1","g2","localeCompare","length","reverse","getReorderedGoods","className","onClick","type","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAwB,CACtBC,SAAU,EACVC,YAAY,GAHhB,EAMEC,gBAAkB,WAChB,EAAKC,SAAS,CAAEH,SAAU,KAP9B,EAUEI,UAAY,WACV,EAAKD,SAAS,CAAEH,SAAU,KAX9B,EAcEK,WAAa,WACX,EAAKF,UAAS,SAACJ,GAAD,MAA4B,CACxCE,YAAaF,EAAME,gBAhBzB,EAoBEK,SAAW,WACT,EAAKH,SAAS,CAAEH,SAAU,EAAGC,YAAY,KArB7C,4CAwBE,WACE,MAAiCM,KAAKR,MAA9BE,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEdQ,EA3DH,SACLA,EADK,GAGJ,IADCR,EACF,EADEA,SAAUC,EACZ,EADYA,WAENQ,EAAY,YAAOD,GAEzB,OAAQR,GACN,KAAK,EACHS,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGE,cAAcD,MAG1B,MAEF,KAAK,EACHH,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGG,OAASF,EAAGE,UAS5B,OAAIb,EACK,YAAIQ,GAAcM,UAGpBN,EA8BSO,CACZnB,EACA,CAAEG,WAAUC,eAGd,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASX,KAAKL,gBACdiB,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CAAE,WAAyB,IAAbpB,IANlB,iCAYA,wBACEkB,QAASX,KAAKH,UACde,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,WAAyB,IAAbpB,IANlB,4BAYA,wBACEkB,QAASX,KAAKF,WACdc,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,YAAanB,IANnB,qBAYA,wBACEiB,QAASX,KAAKD,SACda,KAAK,SACLF,UAAWG,IACT,SACA,YACA,WACA,CAAE,YAA0B,IAAbpB,IAAmBC,IAPtC,sBAcF,6BACE,6BACGO,EAAMa,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBAzFrB,GAAyBC,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3f793d68.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case 1:\n      visibleGoods.sort((g1, g2) => {\n        return g1.localeCompare(g2);\n      });\n\n      break;\n\n    case 2:\n      visibleGoods.sort((g1, g2) => {\n        return g1.length - g2.length;\n      });\n\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    return [...visibleGoods].reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component {\n  state: ReorderOptions = {\n    sortType: 0,\n    isReversed: false,\n  };\n\n  alphabeticalBtn = () => {\n    this.setState({ sortType: 1 });\n  };\n\n  lengthBtn = () => {\n    this.setState({ sortType: 2 });\n  };\n\n  reverseBtn = () => {\n    this.setState((state: ReorderOptions) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetBtn = () => {\n    this.setState({ sortType: 0, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const goods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={this.alphabeticalBtn}\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== 1 },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={this.lengthBtn}\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== 2 },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={this.reverseBtn}\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n          >\n            Reverse\n          </button>\n\n          <button\n            onClick={this.resetBtn}\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-danger',\n              'is-light',\n              { 'is-hidden': sortType === 0 && !isReversed },\n            )}\n          >\n            Reset\n          </button>\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li\n                key={good}\n                data-cy=\"Good\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}